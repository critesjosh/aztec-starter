{
  "rules": {
    "no-console": {
      "level": "warning",
      "message": "Avoid using console.log in production code. Use proper logging instead."
    },
    "require-jsdoc": {
      "level": "warning",
      "message": "Add JSDoc comments for public functions and classes"
    },
    "smart-contract-security": {
      "level": "error",
      "message": "Review for common smart contract vulnerabilities",
      "patterns": [
        "reentrancy",
        "overflow",
        "underflow",
        "unchecked-send",
        "unchecked-call"
      ]
    },
    "test-coverage": {
      "level": "warning",
      "message": "Ensure new code has corresponding tests",
      "patterns": [
        "test",
        "spec",
        "it\\(",
        "describe\\("
      ]
    },
    "private-key-security": {
      "level": "error",
      "message": "Never commit private keys or sensitive credentials",
      "patterns": [
        "private_key",
        "secret_key",
        "mnemonic",
        "seed"
      ]
    },
    "aztec-best-practices": {
      "level": "warning",
      "message": "Follow Aztec protocol best practices",
      "patterns": [
        "note",
        "nullifier",
        "commitment",
        "viewing_key"
      ]
    },
    "type-safety": {
      "level": "warning",
      "message": "Use explicit types and avoid 'any'",
      "patterns": [
        ": any",
        "as any"
      ]
    },
    "error-handling": {
      "level": "warning",
      "message": "Implement proper error handling",
      "patterns": [
        "try\\s*\\{",
        "catch\\s*\\(",
        "throw new Error"
      ]
    },
    "function-length": {
      "level": "warning",
      "message": "Keep functions short and focused on a single responsibility",
      "max-lines": 50
    },
    "naming-conventions": {
      "level": "warning",
      "message": "Follow consistent naming conventions",
      "patterns": {
        "variables": "^[a-z][a-zA-Z0-9]*$",
        "constants": "^[A-Z][A-Z0-9_]*$",
        "functions": "^[a-z][a-zA-Z0-9]*$",
        "classes": "^[A-Z][a-zA-Z0-9]*$"
      }
    },
    "aztec-privacy": {
      "level": "error",
      "message": "Ensure proper privacy measures in Aztec contracts",
      "patterns": [
        "private\\s+note",
        "encrypted\\s+data",
        "shielded\\s+transfer"
      ]
    },
    "code-comments": {
      "level": "warning",
      "message": "Add meaningful comments for complex logic",
      "patterns": [
        "TODO:",
        "FIXME:",
        "NOTE:"
      ]
    },
    "dependency-management": {
      "level": "warning",
      "message": "Keep dependencies up to date and secure",
      "patterns": [
        "npm\\s+audit",
        "yarn\\s+audit",
        "package-lock\\.json",
        "yarn\\.lock"
      ]
    },
    "hardcoded-values": {
      "level": "warning",
      "message": "Avoid hardcoded values, use named constants instead",
      "patterns": [
        "\\b\\d+\\.\\d+\\b",
        "\\b\\d+\\b"
      ],
      "exclude-patterns": [
        "\\b0\\b",
        "\\b1\\b",
        "\\b2\\b",
        "\\b3\\b",
        "\\b4\\b",
        "\\b5\\b",
        "\\b6\\b",
        "\\b7\\b",
        "\\b8\\b",
        "\\b9\\b"
      ]
    },
    "descriptive-names": {
      "level": "warning",
      "message": "Use descriptive and meaningful names for variables, functions, and classes",
      "patterns": {
        "avoid": [
          "^[a-z]$",
          "^[A-Z]$",
          "^[a-z]\\d+$",
          "^[A-Z]\\d+$"
        ]
      }
    },
    "single-responsibility": {
      "level": "warning",
      "message": "Each function should have a single responsibility",
      "patterns": [
        "function\\s+\\w+\\s*\\([^)]*\\)\\s*\\{[^}]*\\b(and|or|but)\\b[^}]*\\}",
        "function\\s+\\w+\\s*\\([^)]*\\)\\s*\\{[^}]*\\b(if|else|switch)\\b[^}]*\\b(if|else|switch)\\b[^}]*\\}"
      ]
    },
    "dry-principle": {
      "level": "warning",
      "message": "Don't Repeat Yourself (DRY) - Avoid code duplication",
      "patterns": [
        "\\b(\\w+)\\s*=\\s*\\1\\b",
        "function\\s+\\w+\\s*\\([^)]*\\)\\s*\\{[^}]*\\bfunction\\s+\\w+\\s*\\([^)]*\\)\\s*\\{[^}]*\\}"
      ]
    },
    "nested-conditionals": {
      "level": "warning",
      "message": "Avoid deeply nested conditionals, extract complex logic into separate functions",
      "patterns": [
        "if\\s*\\([^)]*\\)\\s*\\{[^}]*if\\s*\\([^)]*\\)\\s*\\{[^}]*if\\s*\\([^)]*\\)\\s*\\{"
      ]
    },
    "code-formatting": {
      "level": "warning",
      "message": "Follow consistent code formatting standards",
      "patterns": {
        "spacing": {
          "before-brace": "\\{\\s*\\n",
          "after-brace": "\\n\\s*\\}",
          "around-operators": "[^\\s]([+\\-*/=])[^\\s]"
        },
        "indentation": {
          "tabs": "\\t",
          "spaces": "^ {2,}"
        }
      }
    },
    "version-control": {
      "level": "warning",
      "message": "Use version control best practices",
      "patterns": [
        "git\\s+commit\\s+-m\\s+\"wip\"",
        "git\\s+commit\\s+-m\\s+\"fix\"",
        "git\\s+commit\\s+-m\\s+\"update\""
      ]
    }
  }
}
